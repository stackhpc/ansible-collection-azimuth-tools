---

#####
## These tasks install TigerVNC server and perform global configuration
#####

# Include the variables for the OS distribution we are running on
# Note that we don't use first_found across the whole list of files because
#Â we want to include all the ones that apply, in the order in which they are defined
# However we do use first_found to handle the case where the file doesn't exist at all
- name: Include OS-specific variables
  include_vars: "{{ vars_file }}"
  vars:
    vars_file: "{{ lookup('first_found', lookup_params) }}"
    lookup_params:
      files: ["{{ item }}"]
      skip: true
  when: vars_file
  loop:
    - "{{ role_path }}/vars/{{ ansible_os_family }}.yml"
    - "{{ role_path }}/vars/{{ ansible_distribution }}.yml"
    - "{{ role_path }}/vars/{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"

- name: Update apt cache
  apt:
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install VNC server
  package:
    name: "{{ tigervnc_server_package }}"
    state: present

# CentOS includes a systemd unit, Ubuntu does not
- name: Ensure vncserver systemd unit exists
  block:
    - name: Install vncserver systemd unit file
      copy:
        src: vncserver@.service
        dest: /etc/systemd/system/
  when: ansible_distribution == 'Ubuntu'

- name: Ensure systemd override directory exists
  file:
    path: /etc/systemd/system/vncserver@.service.d
    state: directory

- name: Install systemd overrides
  copy:
    src: "{{ item }}"
    dest: /etc/systemd/system/vncserver@.service.d/
  loop:
    - start_order.conf
    - restart.conf

- name: Force systemd to reload units
  systemd:
    daemon_reload: yes
